for(row in 1:nrow(all_total_new)){
#print(all_total_new$Sequences[row])
if(!all_total_new$Sequences[row] %in% all_total$Sequences){
print(row)
all_total <- rbind(all_total, all_total_new[row,])
}
}
}else{
all_total <- all_total_new
}
if(file.exists("Output/flagged/ALL_FLAGGED.csv")){
print("File exists")
all_flagged <- read.csv("Output/flagged/ALL_FLAGGED.csv")
all_flagged <- all_flagged %>% select(!starts_with("X"))
for(row in 1:nrow(all_flagged_new)){
#print(all_flagged_new$Sequences[row])
if(!all_flagged_new$Sequences[row] %in% all_flagged$Sequences){
#print(row)
all_flagged <- rbind(all_flagged, all_flagged_new[row,])
}
}
}else{
all_flagged <- all_flagged_new
}
if(file.exists("Output/total/ALL_TOTAL.csv")){
all_total <- read.csv("Output/total/ALL_TOTAL.csv")
all_total <- all_total %>% select(!starts_with("X"))
for(row in 1:nrow(all_total_new)){
#print(all_total_new$Sequences[row])
if(!all_total_new$Sequences[row] %in% all_total$Sequences){
#print(row)
all_total <- rbind(all_total, all_total_new[row,])
}
}
}else{
all_total <- all_total_new
}
#all_flagged$Index <- 1:nrow(all_flagged)
write.csv(all_flagged, paste0("Output/flagged/ALL_FLAGGED.csv"))
write.csv(all_total, paste0("Output/total/ALL_TOTAL.csv"))
print(paste0("Number of proteins analyzed: ", n_proteins))
print(paste0("Number of new flagged peptides: ", nrow(all_flagged_new)))
print(paste0("Number of total flagged peptides: ", nrow(all_flagged)))
hist(all_total_new$numC)
hist(all_total_new$numE)
hist(all_total_new$numH)
hist(all_flagged_new$numH)
hist(all_flagged_new$numC)
hist(all_flagged_new$numE)
hist(all_flagged_new$maxLenE)
hist(all_flagged_new$maxLenC)
hist(all_flagged_new$maxLenH)
nrow(all_total[which(all_total$numC == 10),])
nrow(all_total)
firedata <- read.csv("Data/firedata2c.csv")
setwd("C:/Users/noami/Desktop/Research/Repo/Wildfires-Research-Noa/MTBS_NOAA_project")
#library(rio)
library(dplyr)
library(tidyr)
#library(rgdal)
library(base)
#library(profvis)
#library(rnoaa)
library(lubridate)
#library(sf)
#library(spData)
#library(tidyverse)
library(data.table)
#library(ggplot2)
library(foreach)
#library(parallel)
library(doParallel)
library(doMC)
library(matrixStats)
stationsUS <- read.csv("Data/noaa/stationsUS.csv")
earth.dist <- function (long1, lat1, long2, lat2){
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
firedata <- read.csv("Data/firedata2c.csv")
View(firedata)
#Update minimum distances to ensure that the same station isn't checked twice
firedata[which(firedata$UpdateTMAX == TRUE),]$minDistTMAX <-
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX
firedata[which(firedata$UpdateTMIN == TRUE),]$minDistTMIN <-
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN
firedata[which(firedata$UpdatePRCP == TRUE),]$minDistPRCP <-
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX <- 10000
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnID_TMAX <- "dummy station"
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLong_TMAX <- 90
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLat_TMAX <- -30
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN <- 10000
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnID_TMIN <- "dummy station"
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLong_TMIN <- 90
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLat_TMIN <- -30
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP <- 10000
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnID_PRCP <- "dummy station"
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLong_PRCP <- 90
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLat_PRCP <- -30
firedata <- firedata[1:500,]
row=7
newRow <- firedata[row,]
if(newRow$UpdateTMAX[1] == TRUE | newRow$UpdateTMIN[1] == TRUE |
newRow$UpdatePRCP[1] == TRUE){
print(row)
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if(newRow$UpdateTMAX[1] == TRUE){
prevDist <- newRow$closestStnDist_TMAX[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMAX[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMAX[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMAX[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMAX, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMAX[1] <- newDist
newRow$closestStnID_TMAX[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMAX[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMAX[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMAX"))
}
}
#TMIN
if(newRow$UpdateTMIN[1] == TRUE){
prevDist <- newRow$closestStnDist_TMIN[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMIN[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMIN[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMIN[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMIN, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMIN[1] <- newDist
newRow$closestStnID_TMIN[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMIN[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMIN[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMIN"))
}
}
#PRCP
if(newRow$UpdatePRCP[1] == TRUE){
prevDist <- newRow$closestStnDist_PRCP[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistPRCP[1]
if (newRow$IG_YEAR[1] <= stationsUS$endPRCP[stn] & newRow$IG_YEAR[1] >= stationsUS$startPRCP[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating PRCP, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_PRCP[1] <- newDist
newRow$closestStnID_PRCP[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_PRCP[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_PRCP[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " PRCP"))
}
}
}
}
newRow
View(newRow)
if(file.exists("Data/firedata2c.csv")){
firedata <- read.csv("Data/firedata2c.csv")
#firedata <- firedata[1:40,]
#Find next nearest stations
#Update minimum distances to ensure that the same station isn't checked twice
firedata[which(firedata$UpdateTMAX == TRUE),]$minDistTMAX <-
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX
firedata[which(firedata$UpdateTMIN == TRUE),]$minDistTMIN <-
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN
firedata[which(firedata$UpdatePRCP == TRUE),]$minDistPRCP <-
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX <- 10000
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnID_TMAX <- "dummy station"
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLong_TMAX <- 90
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLat_TMAX <- -30
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN <- 10000
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnID_TMIN <- "dummy station"
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLong_TMIN <- 90
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLat_TMIN <- -30
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP <- 10000
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnID_PRCP <- "dummy station"
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLong_PRCP <- 90
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLat_PRCP <- -30
#find next nearest stations for wildfires that have update flags
registerDoParallel()
ptm <- proc.time()
firedataOut <- foreach (row=1:nrow(firedata), .combine = rbind) %dopar% {
if (row %% 50 == 0) {print(paste0("Row: ",row))}
newRow <- firedata[row,]
if(newRow$UpdateTMAX[1] == TRUE | newRow$UpdateTMIN[1] == TRUE |
newRow$UpdatePRCP[1] == TRUE){
print(row)
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if(newRow$UpdateTMAX[1] == TRUE){
prevDist <- newRow$closestStnDist_TMAX[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMAX[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMAX[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMAX[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMAX, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMAX[1] <- newDist
newRow$closestStnID_TMAX[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMAX[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMAX[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMAX"))
}
}
#TMIN
if(newRow$UpdateTMIN[1] == TRUE){
prevDist <- newRow$closestStnDist_TMIN[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMIN[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMIN[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMIN[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMIN, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMIN[1] <- newDist
newRow$closestStnID_TMIN[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMIN[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMIN[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMIN"))
}
}
#PRCP
if(newRow$UpdatePRCP[1] == TRUE){
prevDist <- newRow$closestStnDist_PRCP[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistPRCP[1]
if (newRow$IG_YEAR[1] <= stationsUS$endPRCP[stn] & newRow$IG_YEAR[1] >= stationsUS$startPRCP[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating PRCP, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_PRCP[1] <- newDist
newRow$closestStnID_PRCP[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_PRCP[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_PRCP[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " PRCP"))
}
}
}
}
newRow
}
proc.time()-ptm
}else{
firedata <- read.csv("Data/firedata1.csv")
}
firedata <- read.csv("Data/firedata2c.csv")
firedata <- firedata[1:1000,]
#Find next nearest stations
#Update minimum distances to ensure that the same station isn't checked twice
firedata[which(firedata$UpdateTMAX == TRUE),]$minDistTMAX <-
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX
firedata[which(firedata$UpdateTMIN == TRUE),]$minDistTMIN <-
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN
firedata[which(firedata$UpdatePRCP == TRUE),]$minDistPRCP <-
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX <- 10000
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnID_TMAX <- "dummy station"
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLong_TMAX <- 90
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLat_TMAX <- -30
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN <- 10000
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnID_TMIN <- "dummy station"
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLong_TMIN <- 90
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLat_TMIN <- -30
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP <- 10000
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnID_PRCP <- "dummy station"
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLong_PRCP <- 90
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLat_PRCP <- -30
#find next nearest stations for wildfires that have update flags
registerDoParallel()
ptm <- proc.time()
firedataOut <- foreach (row=1:nrow(firedata), .combine = rbind) %dopar% {
if (row %% 50 == 0) {print(paste0("Row: ",row))}
newRow <- firedata[row,]
if(newRow$UpdateTMAX[1] == TRUE | newRow$UpdateTMIN[1] == TRUE |
newRow$UpdatePRCP[1] == TRUE){
print(row)
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if(newRow$UpdateTMAX[1] == TRUE){
prevDist <- newRow$closestStnDist_TMAX[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMAX[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMAX[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMAX[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMAX, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMAX[1] <- newDist
newRow$closestStnID_TMAX[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMAX[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMAX[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMAX"))
}
}
#TMIN
if(newRow$UpdateTMIN[1] == TRUE){
prevDist <- newRow$closestStnDist_TMIN[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMIN[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMIN[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMIN[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMIN, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMIN[1] <- newDist
newRow$closestStnID_TMIN[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMIN[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMIN[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMIN"))
}
}
#PRCP
if(newRow$UpdatePRCP[1] == TRUE){
prevDist <- newRow$closestStnDist_PRCP[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistPRCP[1]
if (newRow$IG_YEAR[1] <= stationsUS$endPRCP[stn] & newRow$IG_YEAR[1] >= stationsUS$startPRCP[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating PRCP, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_PRCP[1] <- newDist
newRow$closestStnID_PRCP[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_PRCP[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_PRCP[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " PRCP"))
}
}
}
}
newRow
}
proc.time()-ptm
View(firedataOut)
anyNA(firedata$closestStnID_TMAX)
anyNA(firedata$closestStnID_TMIN)
anyNA(firedata$closestStnID_PRCP)
firedata <- read.csv("Data/firedata2a.csv")
anyNA(firedata$closestStnID_PRCP)
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if(newRow$UpdateTMAX[1] == TRUE){
prevDist <- newRow$closestStnDist_TMAX[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMAX[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMAX[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMAX[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMAX, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMAX[1] <- newDist
newRow$closestStnID_TMAX[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMAX[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMAX[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMAX"))
}
}
#TMIN
if(newRow$UpdateTMIN[1] == TRUE){
prevDist <- newRow$closestStnDist_TMIN[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMIN[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMIN[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMIN[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMIN, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMIN[1] <- newDist
newRow$closestStnID_TMIN[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMIN[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMIN[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMIN"))
}
}
#PRCP
if(newRow$UpdatePRCP[1] == TRUE){
prevDist <- newRow$closestStnDist_PRCP[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistPRCP[1]
if (newRow$IG_YEAR[1] <= stationsUS$endPRCP[stn] & newRow$IG_YEAR[1] >= stationsUS$startPRCP[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating PRCP, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_PRCP[1] <- newDist
newRow$closestStnID_PRCP[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_PRCP[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_PRCP[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " PRCP"))
}
}
}
#library(rio)
library(dplyr)
library(tidyr)
#library(rgdal)
library(base)
#library(profvis)
#library(rnoaa)
library(lubridate)
#library(sf)
#library(spData)
#library(tidyverse)
library(data.table)
#library(ggplot2)
library(foreach)
#library(parallel)
library(doParallel)
library(doMC)
library(matrixStats)
stationsUS <- read.csv("Data/noaa/stationsUS.csv")
earth.dist <- function (long1, lat1, long2, lat2){
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
if(file.exists("Data/firedata2c.csv")){
firedata <- read.csv("Data/firedata2c.csv")
firedata <- firedata[1:1000,]
#Find next nearest stations
#Update minimum distances to ensure that the same station isn't checked twice
firedata[which(firedata$UpdateTMAX == TRUE),]$minDistTMAX <-
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX
firedata[which(firedata$UpdateTMIN == TRUE),]$minDistTMIN <-
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN
firedata[which(firedata$UpdatePRCP == TRUE),]$minDistPRCP <-
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnDist_TMAX <- 10000
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnID_TMAX <- "dummy station"
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLong_TMAX <- 90
firedata[which(firedata$UpdateTMAX == TRUE),]$closestStnLat_TMAX <- -30
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnDist_TMIN <- 10000
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnID_TMIN <- "dummy station"
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLong_TMIN <- 90
firedata[which(firedata$UpdateTMIN == TRUE),]$closestStnLat_TMIN <- -30
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnDist_PRCP <- 10000
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnID_PRCP <- "dummy station"
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLong_PRCP <- 90
firedata[which(firedata$UpdatePRCP == TRUE),]$closestStnLat_PRCP <- -30
#find next nearest stations for wildfires that have update flags
registerDoParallel()
ptm <- proc.time()
firedataOut <- foreach (row=1:nrow(firedata), .combine = rbind) %dopar% {
if (row %% 50 == 0) {print(paste0("Row: ",row))}
newRow <- firedata[row,]
if(newRow$UpdateTMAX[1] == TRUE | newRow$UpdateTMIN[1] == TRUE |
newRow$UpdatePRCP[1] == TRUE){
print(row)
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if(newRow$UpdateTMAX[1] == TRUE){
prevDist <- newRow$closestStnDist_TMAX[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMAX[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMAX[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMAX[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMAX, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMAX[1] <- newDist
newRow$closestStnID_TMAX[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMAX[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMAX[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMAX"))
}
}
#TMIN
if(newRow$UpdateTMIN[1] == TRUE){
prevDist <- newRow$closestStnDist_TMIN[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistTMIN[1]
if (newRow$IG_YEAR[1] <= stationsUS$endTMIN[stn] & newRow$IG_YEAR[1] >= stationsUS$startTMIN[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating TMIN, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_TMIN[1] <- newDist
newRow$closestStnID_TMIN[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_TMIN[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_TMIN[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " TMIN"))
}
}
#PRCP
if(newRow$UpdatePRCP[1] == TRUE){
prevDist <- newRow$closestStnDist_PRCP[1]
newDist <- earth.dist(newRow$BurnBndLon[1], newRow$BurnBndLat[1], stationsUS$LON[stn], stationsUS$LAT[stn])
minDist <- newRow$minDistPRCP[1]
if (newRow$IG_YEAR[1] <= stationsUS$endPRCP[stn] & newRow$IG_YEAR[1] >= stationsUS$startPRCP[stn] &
newDist < prevDist & newDist > minDist){
#print(paste0("Updating PRCP, stn: ", stationsUS$ID[stn], " row: ", row))
newRow$closestStnDist_PRCP[1] <- newDist
newRow$closestStnID_PRCP[1] <- toString(stationsUS$ID[stn])
newRow$closestStnLong_PRCP[1] <-  stationsUS$LON[stn]
newRow$closestStnLat_PRCP[1] <-  stationsUS$LAT[stn]
print(paste0("row: ", row, " ID: ", newRow$closestStnID_TMAX[1], " PRCP"))
}
}
}
}
newRow
}
proc.time()-ptm
write.csv(firedataOut, "Data/firedata2a.csv")
}else{
firedata <- read.csv("Data/firedata1.csv")
write.csv(firedata, "Data/firedata1.csv")
}
print("Done")
View(firedata)
View(firedataOut)
anyNA(firedataOut$closestStnID_PRCP)
