firedata$closestStnID_TMAX[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMAX[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMAX[row] <-  stationsUS$LAT[stn]
#print(paste0("row: ", row, " ID: ", firedata$closestStnID_TMAX[row], " stn: ", stn))
}
#TMIN
if (firedata$IG_YEAR[row] <= stationsUS$endTMIN[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMIN[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMIN[row], firedata$closestStnLat_TMIN[row])){
firedata$closestStnDist_TMIN[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMIN[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMIN[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMIN[row] <-  stationsUS$LAT[stn]
}
#PRCP
if (firedata$IG_YEAR[row] <= stationsUS$endPRCP[stn] & firedata$IG_YEAR[row] >= stationsUS$startPRCP[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_PRCP[row], firedata$closestStnLat_PRCP[row])){
firedata$closestStnDist_PRCP[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_PRCP[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_PRCP[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_PRCP[row] <-  stationsUS$LAT[stn]
}
}
}
proc.time()-ptm
firedataTMAX <- subset(firedata, select=-c(closestStnID_TMIN, closestStnID_PRCP,
closestStnDist_TMIN, closestStnDist_PRCP, closestStnLat_TMIN,
closestStnLat_PRCP, closestStnLong_TMIN, closestStnLong_PRCP))
firedataTMIN <- subset(firedata, select=-c(closestStnID_TMAX, closestStnID_PRCP,
closestStnDist_TMAX, closestStnDist_PRCP, closestStnLat_TMAX,
closestStnLat_PRCP, closestStnLong_TMAX, closestStnLong_PRCP))
firedataPRCP <- subset(firedata, select=-c(closestStnID_TMIN, closestStnID_TMAX,
closestStnDist_TMIN, closestStnDist_TMAX, closestStnLat_TMIN,
closestStnLat_TMAX, closestStnLong_TMIN, closestStnLong_TMAX))
#save closest station data
write.csv(firedata, "Data/firedata1.csv")
write.csv(firedataTMAX, "Data/firedata1TMAX.csv")
write.csv(firedataTMIN, "Data/firedata1TMIN.csv")
write.csv(firedataPRCP, "Data/firedata1PRCP.csv")
ptm <- proc.time()
for (row in 1:nrow(firedata)){
if (row %% 500 == 0) {print(paste0("Row: ",row))}
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if (firedata$IG_YEAR[row] <= stationsUS$endTMAX[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMAX[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMAX[row], firedata$closestStnLat_TMAX[row])){
firedata$closestStnDist_TMAX[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMAX[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMAX[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMAX[row] <-  stationsUS$LAT[stn]
#print(paste0("row: ", row, " ID: ", firedata$closestStnID_TMAX[row], " stn: ", stn))
}
#TMIN
if (firedata$IG_YEAR[row] <= stationsUS$endTMIN[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMIN[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMIN[row], firedata$closestStnLat_TMIN[row])){
firedata$closestStnDist_TMIN[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMIN[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMIN[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMIN[row] <-  stationsUS$LAT[stn]
}
#PRCP
if (firedata$IG_YEAR[row] <= stationsUS$endPRCP[stn] & firedata$IG_YEAR[row] >= stationsUS$startPRCP[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_PRCP[row], firedata$closestStnLat_PRCP[row])){
firedata$closestStnDist_PRCP[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_PRCP[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_PRCP[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_PRCP[row] <-  stationsUS$LAT[stn]
}
}
}
proc.time()-ptm
names(firedata)
names(stationsUS)
View(stationsUS)
#create stations dataframe
typedcols <- c( "A11", "F9", "F10", "F7", "X1","A2",
"X1","A30", "X1", "A3", "X1", "A3", "X1", "A5" )
stations <- read.fortran("Data/noaa/stations.txt",
typedcols,
comment.char="")
hdrs <- c("ID", "LAT", "LON", "ELEV", "ST", "NAME","GSN", "HCN", "WMOID")
names(stations) <- hdrs
#create inventory dataframe
invcols <- c( "A11", "X1", "F8", "X1", "F9", "X1","A4",
"X1","I4", "X1", "I4" )
inv <- read.fortran("Data/noaa/inventory.txt",
invcols,
comment.char="")
invhdrs <- c("ID", "LAT", "LON", "ELEM" , "FIRST", "LAST")
names(inv) <- invhdrs
#Possible future modification: allow user to specify which variables they want to track
#Limitations of this modification: the code would take forever to run again, and there is less
#   data observed for other variables so there would be more NAs
#only include inventory rows for desired observations
inv$ELEM <- as.character(inv$ELEM)
inv <- inv[which(inv$ELEM == "TMAX" | inv$ELEM == "TMIN" | inv$ELEM == "PRCP"),]
#create subset dataframe containing only stations in the US
statelist <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY")
stationsUS<-stations[which(stations$ST %in% statelist),]
#include station start and stop dates of variable records
stationsUS$startTMAX <- 0
stationsUS$startTMIN <- 0
stationsUS$startPRCP <- 0
stationsUS$endTMAX <- 0
stationsUS$endTMIN <- 0
stationsUS$endPRCP <- 0
#remove from inv any stations that do not ever take observations for TMAX, TMIN and PRCP
for (stn in 1:nrow(stationsUS)){
print(stn)
if(!"TMAX" %in% inv[which(inv$ID == stationsUS$ID[stn]),]$ELEM |
!"TMIN" %in% inv[which(inv$ID == stationsUS$ID[stn]),]$ELEM |
!"PRCP" %in% inv[which(inv$ID == stationsUS$ID[stn]),]$ELEM){
inv <- inv[which(inv$ID != stationsUS$ID[stn]),]
}
}
#remove from inv the stations that are not in stationsUS
inv$inStnUS <- inv$ID %in% stationsUS$ID
inv <- inv[which(inv$inStnUS),]
#remove from stationsUS the stations that are not in inv
stationsUS$inInv <- stationsUS$ID %in% inv$ID
stationsUS <- stationsUS[which(stationsUS$inInv),]
#include start and stop times of variable obs
#current time:  720.69   46.93  771.09
ptm <- proc.time()
for (stn in 1:nrow(stationsUS)){
if (stn%%100 == 0){
print(stn)
}
stationsUS$startTMAX[stn] <- inv[which(inv$ID == stationsUS[stn,]$ID & inv$ELEM == "TMAX"),]$FIRST[1]
stationsUS$endTMAX[stn] <- inv[which(inv$ID == stationsUS[stn,]$ID & inv$ELEM == "TMAX"),]$LAST[1]
stationsUS$startTMIN[stn] <- inv[which(inv$ID == stationsUS[stn,]$ID & inv$ELEM == "TMIN"),]$FIRST[1]
stationsUS$endTMIN[stn] <- inv[which(inv$ID == stationsUS[stn,]$ID & inv$ELEM == "TMIN"),]$LAST[1]
stationsUS$startPRCP[stn] <- inv[which(inv$ID == stationsUS[stn,]$ID & inv$ELEM == "PRCP"),]$FIRST[1]
stationsUS$endPRCP[stn] <- inv[which(inv$ID == stationsUS[stn,]$ID & inv$ELEM == "PRCP"),]$FIRST[1]
}
proc.time()-ptm
#Add year each station was decomissioned from inventory to stationsUS dataframe
#current time elapsed: 219.14
ptm <- proc.time()
stationsUS$LAST <- 0
for(stn in 1:nrow(stationsUS)){
stationsUS[stn,]$LAST <- inv[which(inv$ID == stationsUS[stn,]$ID),][1,]$LAST
#print(paste0(stn, " ", stationsUS[stn,]$LAST))
}
proc.time()-ptm
stationsUS$FIRST <- 0
for(stn in 1:nrow(stationsUS)){
stationsUS[stn,]$FIRST <- inv[which(inv$ID == stationsUS[stn,]$ID),][1,]$FIRST
}
#remove stations from stationsUS that were decomissioned before 1984
ptm <- proc.time()
stationsUS$decom <- FALSE
for(i in 1:nrow(inv)){
if(inv[i,]$LAST < 1984){
stationsUS[which(stationsUS$ID == inv[i,]$ID),]$decom = TRUE
print(i)
}
}
stationsUS <- stationsUS[which(stationsUS$decom == FALSE),]
proc.time() - ptm
#save stations dataframe
write.csv(stationsUS, "Data/mtbs/stationsUS.csv")
stationsUS <- read.csv("Data/mtbs/stationsUS.csv")
firedata <- firedata[,which(!names(firedata) %in% c("X.1", "X", "irwinID", "Incid_Name", "Map_ID", "Map_Prog", "Pre_ID", "Post_ID", "Perim_ID", "dNBR_offst", "dNBR_stdDv", "NoData_T", "IncGreen_T", "Low_T", "Mod_T", "High_T", "ORIG_FID"))]
#save fire data
otherFiredata <- firedata[which(!firedata$Incid_Type %in% c("Prescribed Fire", "Wildfire", "Wildland Fire Use")),]
#remove from firedata all fires that are not wildfires
firedata <- firedata[which(firedata$Incid_Type %in% c("Wildfire", "Prescribed Fire", "Wildland Fire Use")),]
#write.csv(firedata, "Data/mtbs/firedata1.csv")
write.csv(otherFiredata, "Data/mtbs/otherFiredata.csv")
##########
#Section 2: For each wildfire, identify the closest weather station
##########
#add closest station fields to mtbs firedata
#fields initiated as a dummy station located outside the US
firedata$closestStnDist_TMAX <- 10000
firedata$closestStnID_TMAX <- "dummy station"
firedata$closestStnLong_TMAX <- 90
firedata$closestStnLat_TMAX <- -30
firedata$closestStnDist_TMIN <- 10000
firedata$closestStnID_TMIN <- "dummy station"
firedata$closestStnLong_TMIN <- 90
firedata$closestStnLat_TMIN <- -30
firedata$closestStnDist_PRCP <- 10000
firedata$closestStnID_PRCP <- "dummy station"
firedata$closestStnLong_PRCP <- 90
firedata$closestStnLat_PRCP <- -30
#define function to calculate distance between two lat long points
#code from https://www.google.com/url?q=https://conservationecology.wordpress.com/2013/06/30/distance-between-two-points-in-r/&sa=D&ust=1590514403133000&usg=AFQjCNFQnMg9-YSmAMVK-nLN2eHnJSEQTQ
earth.dist <- function (long1, lat1, long2, lat2)
{
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
#identify closest stations for wildfire data
ptm <- proc.time()
for (row in 1:nrow(firedata)){
if (row %% 500 == 0) {print(paste0("Row: ",row))}
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if (firedata$IG_YEAR[row] <= stationsUS$endTMAX[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMAX[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMAX[row], firedata$closestStnLat_TMAX[row])){
firedata$closestStnDist_TMAX[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMAX[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMAX[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMAX[row] <-  stationsUS$LAT[stn]
#print(paste0("row: ", row, " ID: ", firedata$closestStnID_TMAX[row], " stn: ", stn))
}
#TMIN
if (firedata$IG_YEAR[row] <= stationsUS$endTMIN[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMIN[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMIN[row], firedata$closestStnLat_TMIN[row])){
firedata$closestStnDist_TMIN[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMIN[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMIN[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMIN[row] <-  stationsUS$LAT[stn]
}
#PRCP
if (firedata$IG_YEAR[row] <= stationsUS$endPRCP[stn] & firedata$IG_YEAR[row] >= stationsUS$startPRCP[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_PRCP[row], firedata$closestStnLat_PRCP[row])){
firedata$closestStnDist_PRCP[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_PRCP[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_PRCP[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_PRCP[row] <-  stationsUS$LAT[stn]
}
}
}
proc.time()-ptm
firedataTMAX <- subset(firedata, select=-c(closestStnID_TMIN, closestStnID_PRCP,
closestStnDist_TMIN, closestStnDist_PRCP, closestStnLat_TMIN,
closestStnLat_PRCP, closestStnLong_TMIN, closestStnLong_PRCP))
firedataTMIN <- subset(firedata, select=-c(closestStnID_TMAX, closestStnID_PRCP,
closestStnDist_TMAX, closestStnDist_PRCP, closestStnLat_TMAX,
closestStnLat_PRCP, closestStnLong_TMAX, closestStnLong_PRCP))
firedataPRCP <- subset(firedata, select=-c(closestStnID_TMIN, closestStnID_TMAX,
closestStnDist_TMIN, closestStnDist_TMAX, closestStnLat_TMIN,
closestStnLat_TMAX, closestStnLong_TMIN, closestStnLong_TMAX))
#save closest station data
write.csv(firedata, "Data/firedata1.csv")
write.csv(firedataTMAX, "Data/firedata1TMAX.csv")
write.csv(firedataTMIN, "Data/firedata1TMIN.csv")
write.csv(firedataPRCP, "Data/firedata1PRCP.csv")
ptm <- proc.time()
for (row in 19500:nrow(firedata)){
if (row %% 500 == 0) {print(paste0("Row: ",row))}
for (stn in 1:nrow(stationsUS)){
#find closest station with TMAX observations during time period
if (firedata$IG_YEAR[row] <= stationsUS$endTMAX[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMAX[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMAX[row], firedata$closestStnLat_TMAX[row])){
firedata$closestStnDist_TMAX[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMAX[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMAX[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMAX[row] <-  stationsUS$LAT[stn]
#print(paste0("row: ", row, " ID: ", firedata$closestStnID_TMAX[row], " stn: ", stn))
}
#TMIN
if (firedata$IG_YEAR[row] <= stationsUS$endTMIN[stn] & firedata$IG_YEAR[row] >= stationsUS$startTMIN[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_TMIN[row], firedata$closestStnLat_TMIN[row])){
firedata$closestStnDist_TMIN[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_TMIN[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_TMIN[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_TMIN[row] <-  stationsUS$LAT[stn]
}
#PRCP
if (firedata$IG_YEAR[row] <= stationsUS$endPRCP[stn] & firedata$IG_YEAR[row] >= stationsUS$startPRCP[stn] & earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], stationsUS$LON[stn], stationsUS$LAT[stn]) <
earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row], firedata$closestStnLong_PRCP[row], firedata$closestStnLat_PRCP[row])){
firedata$closestStnDist_PRCP[row] <- earth.dist(firedata$BurnBndLon[row], firedata$BurnBndLat[row],  stationsUS$LON[stn],stationsUS$LAT[stn])
firedata$closestStnID_PRCP[row] <- toString(stationsUS$ID[stn])
firedata$closestStnLong_PRCP[row] <-  stationsUS$LON[stn]
firedata$closestStnLat_PRCP[row] <-  stationsUS$LAT[stn]
}
}
}
proc.time()-ptm
firedataTMAX <- subset(firedata, select=-c(closestStnID_TMIN, closestStnID_PRCP,
closestStnDist_TMIN, closestStnDist_PRCP, closestStnLat_TMIN,
closestStnLat_PRCP, closestStnLong_TMIN, closestStnLong_PRCP))
firedataTMIN <- subset(firedata, select=-c(closestStnID_TMAX, closestStnID_PRCP,
closestStnDist_TMAX, closestStnDist_PRCP, closestStnLat_TMAX,
closestStnLat_PRCP, closestStnLong_TMAX, closestStnLong_PRCP))
firedataPRCP <- subset(firedata, select=-c(closestStnID_TMIN, closestStnID_TMAX,
closestStnDist_TMIN, closestStnDist_TMAX, closestStnLat_TMIN,
closestStnLat_TMAX, closestStnLong_TMIN, closestStnLong_TMAX))
#save closest station data
write.csv(firedata, "Data/firedata1.csv")
write.csv(firedataTMAX, "Data/firedata1TMAX.csv")
write.csv(firedataTMIN, "Data/firedata1TMIN.csv")
write.csv(firedataPRCP, "Data/firedata1PRCP.csv")
firedata <- read.csv("Data/firedata1.csv")
#rxFiredata <- read.csv("Data/mtbs/prescribed_stn.csv")
stationsUS <- read.csv("Data/noaa/stationsUS.csv")
#create a vector of the closest stations
listOfStns <- unique(union(firedata$closestStnID_TMAX, firedata$closestStnID_TMIN))
listOfStns <- unique(union(listOfStns, firedata$closestStnID_PRCP))
listOfStns <- listOfStns[listOfStns != '0']
if(!dir.exists("Data/noaa/noaadata")){
dir.create("Data/noaa/noaadata")
}
#download noaa data
for(i in 1:length(listOfStns)){
if(!file.exists(paste0('Data/noaa/noaadata/', listOfStns[i], ".csv"))){
outfile <- paste0('Data/noaa/noaadata/', listOfStns[i], ".csv")
df<-ghcnd(listOfStns[i], refresh=TRUE)
write.csv(df, outfile)
print("written file")
}
print(i)
}
library(rio)
library(dplyr)
library(tidyr)
library(rgdal)
library(base)
library(profvis)
library(rnoaa)
library(lubridate)
library(sf)
library(spData)
library(tidyverse)
library(data.table)
library(ggplot2)
firedata <- read.csv("Data/firedata1.csv")
#rxFiredata <- read.csv("Data/mtbs/prescribed_stn.csv")
stationsUS <- read.csv("Data/noaa/stationsUS.csv")
#create a vector of the closest stations
listOfStns <- unique(union(firedata$closestStnID_TMAX, firedata$closestStnID_TMIN))
listOfStns <- unique(union(listOfStns, firedata$closestStnID_PRCP))
listOfStns <- listOfStns[listOfStns != '0']
if(!dir.exists("Data/noaa/noaadata")){
dir.create("Data/noaa/noaadata")
}
#download noaa data
for(i in 1:length(listOfStns)){
if(!file.exists(paste0('Data/noaa/noaadata/', listOfStns[i], ".csv"))){
outfile <- paste0('Data/noaa/noaadata/', listOfStns[i], ".csv")
df<-ghcnd(listOfStns[i], refresh=TRUE)
write.csv(df, outfile)
print("written file")
}
print(i)
}
library(rio)
library(dplyr)
library(tidyr)
library(rgdal)
library(base)
library(profvis)
library(rnoaa)
library(lubridate)
library(sf)
library(spData)
library(tidyverse)
library(data.table)
library(ggplot2)
firedata <- read.csv("Data/firedata1.csv")
#for practice run on local:
firedatabackup <- firedata
firedata <- firedata[1:50,]
noaaExtract <- function(stn, date, elm){
#print(paste0(stn, " ", elm, " ", as.Date(date)))
#upload dataframe, select rows of the given year and month
if(!file.exists(paste0("Data/noaa/noaadata/", stn, ".csv"))){
print(paste0("File missing: ", stn))
return(-9999)
}
if(file.exists(paste0("Data/noaa/noaadata/", stn, ".csv"))){
df <- read.csv(paste0("Data/noaa/noaadata/", stn, ".csv"))
df <- df[which(df$year == lubridate::year(date) & df$month == lubridate::month(date) & df$element == elm),]
if(nrow(df) == 0){return(NA)}
day = day(date)
#check for quality flags
flag_col_name <- paste0("QFLAG", day)
df1 <- select(df, all_of(flag_col_name))
if(!is.na(df1[1,1]) & as.character(df1[1,1]) != "" & as.character(df1[1,1]) != " "){
print(paste0("Flagged: ", stn, " ", date, " ", elm))
return("flagged")
}
#if no quality flags, return the observation value
value_col_name <- paste0("VALUE", day)
df2 <- select(df, value_col_name)
out <- df2[1,1]
return(as.numeric(out))
}
}
vNoaaExtract <- Vectorize(noaaExtract, vectorize.args = c("stn", "date"))
ptm <- proc.time()
for(i in -21:35){
print(paste0("TMAX", i))
if(i<0){
varname_TMAX <- paste0("TMAX.", -i)
}else{
varname_TMAX <- paste0("TMAX", i)
}
firedata[[varname_TMAX]]<-vNoaaExtract(firedata$closestStnID_TMAX, as.Date(firedata$IG_DATE, format = '%Y-%m-%e')+days(i), "TMAX")
print(paste0("TMIN", i))
if(i<0){
varname_TMIN <- paste0("TMIN.", -i)
}else{
varname_TMIN <- paste0("TMIN", i)
}
firedata[[varname_TMIN]]<-vNoaaExtract(firedata$closestStnID_TMIN, as.Date(firedata$IG_DATE, format = '%Y-%m-%e')+days(i), "TMIN")
print(paste0("PRCP", i))
if(i<0){
varname_PRCP <- paste0("PRCP.", -i)
}else{
varname_PRCP <- paste0("PRCP", i)
}
firedata[[varname_PRCP]]<-vNoaaExtract(firedata$closestStnID_PRCP, as.Date(firedata$IG_DATE, format = '%Y-%m-%e')+days(i), "PRCP")
}
ptm-proc.time()
View(firedata)
firedata$TMAXflag <- rowSums((firedata %>% select(starts_with("TMAX"))) == "flagged")
firedata$TMINflag <- rowSums((firedata %>% select(starts_with("TMIN"))) == "flagged")
firedata$PRCPflag <- rowSums((firedata %>% select(starts_with("PRCP"))) == "flagged")
firedata$TMAXflag <- rowSums(is.na(firedata %>% select(starts_with("TMAX"))))
firedata$TMINflag <- rowSums(is.na(firedata %>% select(starts_with("TMIN"))))
firedata$PRCPflag <- rowSums(is.na(firedata %>% select(starts_with("PRCP"))))
View(firedata)
names(firedata)
View(firedata)
View(firedata)
View(firedata)
firedata$TMAXflag[1:5,]
firedata$TMAXflag[1:5]
View(firedata)
View(firedataPRCP)
View(firedata)
View(firedata[,100:199])
View(firedata[,150:199])
names(firedata)
firedata$TMAXflag <- rowSums((firedata %>% select(starts_with("TMAX"))) == "flagged")
firedata$TMINflag <- rowSums((firedata %>% select(starts_with("TMIN"))) == "flagged")
firedata$PRCPflag <- rowSums((firedata %>% select(starts_with("PRCP"))) == "flagged")
firedata$TMAXna <- rowSums(is.na(firedata %>% select(starts_with("TMAX"))))
firedata$TMINna <- rowSums(is.na(firedata %>% select(starts_with("TMIN"))))
firedata$PRCPna <- rowSums(is.na(firedata %>% select(starts_with("PRCP"))))
View(firedata[,150:199])
names(firedata)
View(firedata[,150:202])
View(firedata[,190:202])
?rowSums
firedata$TMAXflag <- rowSums((firedata %>% select(starts_with("TMAX"))) == "flagged", na.rm = TRUE
)
anyNA(firedata$TMAXflag)
anyNA(firedata$TMINflag)
firedata$TMAXflag <- rowSums((firedata %>% select(starts_with("TMAX"))) == "flagged", na.rm = TRUE)
firedata$TMINflag <- rowSums((firedata %>% select(starts_with("TMIN"))) == "flagged", na.rm = TRUE)
firedata$PRCPflag <- rowSums((firedata %>% select(starts_with("PRCP"))) == "flagged", na.rm = TRUE)
firedata$TMAXna <- rowSums(is.na(firedata %>% select(starts_with("TMAX"))))
firedata$TMINna <- rowSums(is.na(firedata %>% select(starts_with("TMIN"))))
firedata$PRCPna <- rowSums(is.na(firedata %>% select(starts_with("PRCP"))))
flaggedObs<-data.frame(fireID=character(), elm=character(), stnID=list(c(character())), fireLong=numeric(), fireLat=numeric(), stnLong=numeric(), stnLat = numeric(), fireDate=character(), i=integer(), newStn = character(), Dist=numeric(), stringsAsFactors = FALSE)
class(flaggedObs$fireDate) <- "Date"
colnames(flaggedObs)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedData <- firedata[which(firedata$TMAXflag >= 10 | firedata$TMINflag >= 10 |
firedata$PRCPflag >= 10 | firedata$TMAXna >= 15 |
firedata$TMINna >= 15 | firedata$PRCPna >= 15),]
for(row in nrow(flaggedData)){
if (flaggedData$TMAXflag[row] >= 10 | flaggedData$TMAXna[row] >= 15){
stnLongVarname <- paste0("closestStnLong_", "TMAX")
stnLatVarname <- paste0("closestStnLat_", "TMAX")
newrow <- data.frame(fireID = as.character(flaggedData$Event_ID[row]), elm = "TMAX", stnID = c(as.character(flaggedData$closestStnID_TMAX[row])), fireLong = as.numeric(flaggedData$BurnBndLon[row]), fireLat = as.numeric(flaggedData$BurnBndLat[row]), stnLong = as.numeric(flaggedData[[stnLongVarname]][row]), stnLat = as.numeric(flaggedData[[stnLatVarname]][row]),fireDate = as.Date(as.character(flaggedData$IG_DATE[row]), format='%Y-%m-%e'), newStn = as.character(flaggedData$closestStnID_TMAX[row]), Dist = 9999, stringsAsFactors = FALSE)
colnames(newrow)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedObs<-rbind(flaggedObs, newrow)
}
if (flaggedData$TMINflag[row] >= 10 | flaggedData$TMINna[row] >= 15){
stnLongVarname <- paste0("closestStnLong_", "TMIN")
stnLatVarname <- paste0("closestStnLat_", "TMIN")
newrow <- data.frame(fireID = as.character(flaggedData$Event_ID[row]), elm = "TMIN", stnID = c(as.character(flaggedData$closestStnID_TMIN[row])), fireLong = as.numeric(flaggedData$BurnBndLon[row]), fireLat = as.numeric(flaggedData$BurnBndLat[row]), stnLong = as.numeric(flaggedData[[stnLongVarname]][row]), stnLat = as.numeric(flaggedData[[stnLatVarname]][row]),fireDate = as.Date(as.character(flaggedData$IG_DATE[row]), format='%Y-%m-%e'), newStn = as.character(flaggedData$closestStnID_TMIN[row]), Dist = 9999, stringsAsFactors = FALSE)
colnames(newrow)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedObs<-rbind(flaggedObs, newrow)
}
if (flaggedData$PRCPflag[row] >= 10 | flaggedData$PRCPna[row] >= 15){
stnLongVarname <- paste0("closestStnLong_", "PRCP")
stnLatVarname <- paste0("closestStnLat_", "PRCP")
newrow <- data.frame(fireID = as.character(flaggedData$Event_ID[row]), elm = "PRCP", stnID = c(as.character(flaggedData$closestStnID_PRCP[row])), fireLong = as.numeric(flaggedData$BurnBndLon[row]), fireLat = as.numeric(flaggedData$BurnBndLat[row]), stnLong = as.numeric(flaggedData[[stnLongVarname]][row]), stnLat = as.numeric(flaggedData[[stnLatVarname]][row]),fireDate = as.Date(as.character(flaggedData$IG_DATE[row]), format='%Y-%m-%e'), newStn = as.character(flaggedData$closestStnID_PRCP[row]), Dist = 9999, stringsAsFactors = FALSE)
colnames(newrow)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedObs<-rbind(flaggedObs, newrow)
}
}
View(flaggedData)
for(row in 1:nrow(flaggedData)){
if (flaggedData$TMAXflag[row] >= 10 | flaggedData$TMAXna[row] >= 15){
stnLongVarname <- paste0("closestStnLong_", "TMAX")
stnLatVarname <- paste0("closestStnLat_", "TMAX")
newrow <- data.frame(fireID = as.character(flaggedData$Event_ID[row]), elm = "TMAX", stnID = c(as.character(flaggedData$closestStnID_TMAX[row])), fireLong = as.numeric(flaggedData$BurnBndLon[row]), fireLat = as.numeric(flaggedData$BurnBndLat[row]), stnLong = as.numeric(flaggedData[[stnLongVarname]][row]), stnLat = as.numeric(flaggedData[[stnLatVarname]][row]),fireDate = as.Date(as.character(flaggedData$IG_DATE[row]), format='%Y-%m-%e'), newStn = as.character(flaggedData$closestStnID_TMAX[row]), Dist = 9999, stringsAsFactors = FALSE)
colnames(newrow)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedObs<-rbind(flaggedObs, newrow)
}
if (flaggedData$TMINflag[row] >= 10 | flaggedData$TMINna[row] >= 15){
stnLongVarname <- paste0("closestStnLong_", "TMIN")
stnLatVarname <- paste0("closestStnLat_", "TMIN")
newrow <- data.frame(fireID = as.character(flaggedData$Event_ID[row]), elm = "TMIN", stnID = c(as.character(flaggedData$closestStnID_TMIN[row])), fireLong = as.numeric(flaggedData$BurnBndLon[row]), fireLat = as.numeric(flaggedData$BurnBndLat[row]), stnLong = as.numeric(flaggedData[[stnLongVarname]][row]), stnLat = as.numeric(flaggedData[[stnLatVarname]][row]),fireDate = as.Date(as.character(flaggedData$IG_DATE[row]), format='%Y-%m-%e'), newStn = as.character(flaggedData$closestStnID_TMIN[row]), Dist = 9999, stringsAsFactors = FALSE)
colnames(newrow)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedObs<-rbind(flaggedObs, newrow)
}
if (flaggedData$PRCPflag[row] >= 10 | flaggedData$PRCPna[row] >= 15){
stnLongVarname <- paste0("closestStnLong_", "PRCP")
stnLatVarname <- paste0("closestStnLat_", "PRCP")
newrow <- data.frame(fireID = as.character(flaggedData$Event_ID[row]), elm = "PRCP", stnID = c(as.character(flaggedData$closestStnID_PRCP[row])), fireLong = as.numeric(flaggedData$BurnBndLon[row]), fireLat = as.numeric(flaggedData$BurnBndLat[row]), stnLong = as.numeric(flaggedData[[stnLongVarname]][row]), stnLat = as.numeric(flaggedData[[stnLatVarname]][row]),fireDate = as.Date(as.character(flaggedData$IG_DATE[row]), format='%Y-%m-%e'), newStn = as.character(flaggedData$closestStnID_PRCP[row]), Dist = 9999, stringsAsFactors = FALSE)
colnames(newrow)<-c("fireID", "elm", "stnID", "fireLong", "fireLat", "stnLong", "stnLat", "fireDate", "newStn", "Dist")
flaggedObs<-rbind(flaggedObs, newrow)
}
}
